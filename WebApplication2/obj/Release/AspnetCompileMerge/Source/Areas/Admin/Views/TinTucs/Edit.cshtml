@model WebApplication2.Models.TinTuc

@{
    ViewBag.Title = "Edit";
}

<h2>Chỉnh sửa</h2>
@using (Html.BeginForm("Edit", "TinTucs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>TinTuc</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    <div class="form-group">
        @Html.Label("Tên", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Hình ảnh 1", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" />
            @Html.ValidationMessageFor(model => model.img1, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-4">
            <img src="~/AssetsAdmin/upload/img/tintuc/@Model.img1" />
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Hình ảnh 2", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" />
            @Html.ValidationMessageFor(model => model.img2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Hình ảnh 3", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" />
            @Html.ValidationMessageFor(model => model.img3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Tiêu đề tin tức 1", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.des1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.des1, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.Label("Chi tiết tiêu đề 1", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.detail1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.detail1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Tiêu đề tin tức 2", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.des2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.des2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Chi tiết tiêu đề 2", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.detail2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.detail2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Tiêu đề tin tức 3", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.des3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.des3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Chi tiết tiêu đề 3", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.detail3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.detail3, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                bool hide = (Model.hide.GetValueOrDefault(false) ? true : false);
            }
            @Html.CheckBoxFor(model => hide)
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Số thứ tự", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section _Footer
{
    <script src="~/Areas/Admin/Content/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/Admin/Content/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("detail1");
        var editor = CKEDITOR.replace("detail1", { height: '600px' });
        customConfig: '/Areas/Admin/Content/ckeditor/config.js';
    </script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("detail2");
        var editor = CKEDITOR.replace("detail2", { height: '600px' });
        customConfig: '/Areas/Admin/Content/ckeditor/config.js';
    </script>
    <script type="text/javascript">
        var editor = CKEDITOR.replace("detail3");
        var editor = CKEDITOR.replace("detail3", { height: '600px' });
        customConfig: '/Areas/Admin/Content/ckeditor/config.js';
    </script>
    <script>
        $(function () {
            $("#meta").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ.+/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ.+/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i");
                $('#meta').val(text_create);
            }).keyup();
        });
    </script>
}